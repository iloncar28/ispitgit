'use strict';

function onMouseUp(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mouseup', handler, element, intermediateHandler);
}

function onMouseDown(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mousedown', handler, element, intermediateHandler);
}

function onMouseOver(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mouseover', handler, element, intermediateHandler);
}

function onMouseOut(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mouseout', handler, element, intermediateHandler);
}

function onMouseMove(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;
  this.on('mousemove', handler, element, intermediateHandler);
}

function offMouseUp(handler, element) {
  this.off('mouseup', handler, element);
}

function offMouseDown(handler, element) {
  this.off('mousedown', handler, element);
}

function offMouseOver(handler, element) {
  this.off('mouseover', handler, element);
}

function offMouseOut(handler, element) {
  this.off('mouseout', handler, element);
}

function offMouseMove(handler, element) {
  this.off('mousemove', handler, element);
}

module.exports = {
  onMouseUp: onMouseUp,
  onMouseDown: onMouseDown,
  onMouseOver: onMouseOver,
  onMouseOut: onMouseOut,
  onMouseMove: onMouseMove,
  offMouseUp: offMouseUp,
  offMouseDown: offMouseDown,
  offMouseOver: offMouseOver,
  offMouseOut: offMouseOut,
  offMouseMove: offMouseMove
};

function defaultIntermediateHandler(handler, event, element) {
  var pageY = event.pageY,
      pageX = event.pageX,
      button = event.button,
      mouseTop = pageY,
      mouseLeft = pageX,
      mouseButton = button; ///

  handler.call(element, mouseTop, mouseLeft, mouseButton, event, element);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdXNlLmpzIl0sIm5hbWVzIjpbIm9uTW91c2VVcCIsImhhbmRsZXIiLCJlbGVtZW50IiwiaW50ZXJtZWRpYXRlSGFuZGxlciIsImRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyIiwib24iLCJvbk1vdXNlRG93biIsIm9uTW91c2VPdmVyIiwib25Nb3VzZU91dCIsIm9uTW91c2VNb3ZlIiwib2ZmTW91c2VVcCIsIm9mZiIsIm9mZk1vdXNlRG93biIsIm9mZk1vdXNlT3ZlciIsIm9mZk1vdXNlT3V0Iiwib2ZmTW91c2VNb3ZlIiwibW9kdWxlIiwiZXhwb3J0cyIsImV2ZW50IiwicGFnZVkiLCJwYWdlWCIsImJ1dHRvbiIsIm1vdXNlVG9wIiwibW91c2VMZWZ0IiwibW91c2VCdXR0b24iLCJjYWxsIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSxTQUFULENBQW1CQyxPQUFuQixFQUE0QkMsT0FBNUIsRUFBdUY7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCO0FBQ3JGLE9BQUtDLEVBQUwsQ0FBUSxTQUFSLEVBQW1CSixPQUFuQixFQUE0QkMsT0FBNUIsRUFBcUNDLG1CQUFyQztBQUNEOztBQUVELFNBQVNHLFdBQVQsQ0FBcUJMLE9BQXJCLEVBQThCQyxPQUE5QixFQUF5RjtBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7QUFDdkYsT0FBS0MsRUFBTCxDQUFRLFdBQVIsRUFBcUJKLE9BQXJCLEVBQThCQyxPQUE5QixFQUF1Q0MsbUJBQXZDO0FBQ0Q7O0FBRUQsU0FBU0ksV0FBVCxDQUFxQk4sT0FBckIsRUFBOEJDLE9BQTlCLEVBQXlGO0FBQUEsTUFBbERDLG1CQUFrRCx1RUFBNUJDLDBCQUE0QjtBQUN2RixPQUFLQyxFQUFMLENBQVEsV0FBUixFQUFxQkosT0FBckIsRUFBOEJDLE9BQTlCLEVBQXVDQyxtQkFBdkM7QUFDRDs7QUFFRCxTQUFTSyxVQUFULENBQW9CUCxPQUFwQixFQUE2QkMsT0FBN0IsRUFBd0Y7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCO0FBQ3RGLE9BQUtDLEVBQUwsQ0FBUSxVQUFSLEVBQW9CSixPQUFwQixFQUE2QkMsT0FBN0IsRUFBc0NDLG1CQUF0QztBQUNEOztBQUVELFNBQVNNLFdBQVQsQ0FBcUJSLE9BQXJCLEVBQThCQyxPQUE5QixFQUF5RjtBQUFBLE1BQWxEQyxtQkFBa0QsdUVBQTVCQywwQkFBNEI7QUFDdkYsT0FBS0MsRUFBTCxDQUFRLFdBQVIsRUFBcUJKLE9BQXJCLEVBQThCQyxPQUE5QixFQUF1Q0MsbUJBQXZDO0FBQ0Q7O0FBRUQsU0FBU08sVUFBVCxDQUFvQlQsT0FBcEIsRUFBNkJDLE9BQTdCLEVBQXNDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFNBQVQsRUFBb0JWLE9BQXBCLEVBQTZCQyxPQUE3QjtBQUF3Qzs7QUFFaEYsU0FBU1UsWUFBVCxDQUFzQlgsT0FBdEIsRUFBK0JDLE9BQS9CLEVBQXdDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFdBQVQsRUFBc0JWLE9BQXRCLEVBQStCQyxPQUEvQjtBQUEwQzs7QUFFcEYsU0FBU1csWUFBVCxDQUFzQlosT0FBdEIsRUFBK0JDLE9BQS9CLEVBQXdDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFdBQVQsRUFBc0JWLE9BQXRCLEVBQStCQyxPQUEvQjtBQUEwQzs7QUFFcEYsU0FBU1ksV0FBVCxDQUFxQmIsT0FBckIsRUFBOEJDLE9BQTlCLEVBQXVDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFVBQVQsRUFBcUJWLE9BQXJCLEVBQThCQyxPQUE5QjtBQUF5Qzs7QUFFbEYsU0FBU2EsWUFBVCxDQUFzQmQsT0FBdEIsRUFBK0JDLE9BQS9CLEVBQXdDO0FBQUUsT0FBS1MsR0FBTCxDQUFTLFdBQVQsRUFBc0JWLE9BQXRCLEVBQStCQyxPQUEvQjtBQUEwQzs7QUFFcEZjLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmakIsRUFBQUEsU0FBUyxFQUFUQSxTQURlO0FBRWZNLEVBQUFBLFdBQVcsRUFBWEEsV0FGZTtBQUdmQyxFQUFBQSxXQUFXLEVBQVhBLFdBSGU7QUFJZkMsRUFBQUEsVUFBVSxFQUFWQSxVQUplO0FBS2ZDLEVBQUFBLFdBQVcsRUFBWEEsV0FMZTtBQU1mQyxFQUFBQSxVQUFVLEVBQVZBLFVBTmU7QUFPZkUsRUFBQUEsWUFBWSxFQUFaQSxZQVBlO0FBUWZDLEVBQUFBLFlBQVksRUFBWkEsWUFSZTtBQVNmQyxFQUFBQSxXQUFXLEVBQVhBLFdBVGU7QUFVZkMsRUFBQUEsWUFBWSxFQUFaQTtBQVZlLENBQWpCOztBQWFBLFNBQVNYLDBCQUFULENBQW9DSCxPQUFwQyxFQUE2Q2lCLEtBQTdDLEVBQW9EaEIsT0FBcEQsRUFBNkQ7QUFBQSxNQUNuRGlCLEtBRG1ELEdBQzFCRCxLQUQwQixDQUNuREMsS0FEbUQ7QUFBQSxNQUM1Q0MsS0FENEMsR0FDMUJGLEtBRDBCLENBQzVDRSxLQUQ0QztBQUFBLE1BQ3JDQyxNQURxQyxHQUMxQkgsS0FEMEIsQ0FDckNHLE1BRHFDO0FBQUEsTUFFekRDLFFBRnlELEdBRTlDSCxLQUY4QztBQUFBLE1BR3JESSxTQUhxRCxHQUd6Q0gsS0FIeUM7QUFBQSxNQUlyREksV0FKcUQsR0FJdkNILE1BSnVDLEVBSS9COztBQUU1QnBCLEVBQUFBLE9BQU8sQ0FBQ3dCLElBQVIsQ0FBYXZCLE9BQWIsRUFBc0JvQixRQUF0QixFQUFnQ0MsU0FBaEMsRUFBMkNDLFdBQTNDLEVBQXdETixLQUF4RCxFQUErRGhCLE9BQS9EO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIG9uTW91c2VVcChoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbignbW91c2V1cCcsIGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIpO1xufVxuXG5mdW5jdGlvbiBvbk1vdXNlRG93bihoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbignbW91c2Vkb3duJywgaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlcik7XG59XG5cbmZ1bmN0aW9uIG9uTW91c2VPdmVyKGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIgPSBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcikge1xuICB0aGlzLm9uKCdtb3VzZW92ZXInLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb25Nb3VzZU91dChoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyID0gZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIpIHtcbiAgdGhpcy5vbignbW91c2VvdXQnLCBoYW5kbGVyLCBlbGVtZW50LCBpbnRlcm1lZGlhdGVIYW5kbGVyKTtcbn1cblxuZnVuY3Rpb24gb25Nb3VzZU1vdmUoaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7XG4gIHRoaXMub24oJ21vdXNlbW92ZScsIGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIpO1xufVxuXG5mdW5jdGlvbiBvZmZNb3VzZVVwKGhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoJ21vdXNldXAnLCBoYW5kbGVyLCBlbGVtZW50KTsgfVxuXG5mdW5jdGlvbiBvZmZNb3VzZURvd24oaGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZignbW91c2Vkb3duJywgaGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VPdmVyKGhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoJ21vdXNlb3ZlcicsIGhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbmZ1bmN0aW9uIG9mZk1vdXNlT3V0KGhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoJ21vdXNlb3V0JywgaGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gb2ZmTW91c2VNb3ZlKGhhbmRsZXIsIGVsZW1lbnQpIHsgdGhpcy5vZmYoJ21vdXNlbW92ZScsIGhhbmRsZXIsIGVsZW1lbnQpOyB9XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBvbk1vdXNlVXAsXG4gIG9uTW91c2VEb3duLFxuICBvbk1vdXNlT3ZlcixcbiAgb25Nb3VzZU91dCxcbiAgb25Nb3VzZU1vdmUsXG4gIG9mZk1vdXNlVXAsXG4gIG9mZk1vdXNlRG93bixcbiAgb2ZmTW91c2VPdmVyLFxuICBvZmZNb3VzZU91dCxcbiAgb2ZmTW91c2VNb3ZlXG59O1xuXG5mdW5jdGlvbiBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcihoYW5kbGVyLCBldmVudCwgZWxlbWVudCkge1xuICBjb25zdCB7IHBhZ2VZLCBwYWdlWCwgYnV0dG9uIH0gPSBldmVudCxcblx0XHRcdFx0bW91c2VUb3AgPSBwYWdlWSwgIC8vL1xuICAgICAgICBtb3VzZUxlZnQgPSBwYWdlWCwgLy8vXG4gICAgICAgIG1vdXNlQnV0dG9uID0gYnV0dG9uOyAvLy9cbiAgXG4gIGhhbmRsZXIuY2FsbChlbGVtZW50LCBtb3VzZVRvcCwgbW91c2VMZWZ0LCBtb3VzZUJ1dHRvbiwgZXZlbnQsIGVsZW1lbnQpO1xufVxuIl19